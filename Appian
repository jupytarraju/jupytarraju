/* Arry of elements separated specific range */

input:local!singleArray: {
    "One",
    "Two",
    "Three",
    "Four",
    "Five",
    "Six",
    "Seven",
    "Eight",
    "Nine",
    "Ten",
    "MNH",
    "KJJ",
    "gft",
    "c"
  },
  
 number :4
 
 output:"One"(Text)
"Two"(Text)
"Three"(Text)
"Four"(Text)
List of Text String - 4 items
"Five"(Text)
"Six"(Text)
"Seven"(Text)
"Eight"(Text)
List of Text String - 4 items
"Nine"(Text)
"Ten"(Text)
"MNH"(Text)
"KJJ"(Text)
List of Text String - 1 item
"gft"

/*------------------------------------------------------------------------------------------------------------------------------------------*/
a!localVariables(
  local!singleArray: {
    "One",
    "Two",
    "Three",
    "Four",
    "Five",
    "Six",
    "Seven",
    "Eight",
    "Nine",
    "Ten",
    "MNH",
    "KJJ",
    "gft",
    "c"
  },
  local!lengthOfSingleArray: if(
    a!isNullOrEmpty(local!singleArray),
    0,
    length(local!singleArray)
  ),
  if(
    local!lengthOfSingleArray = 0,
    {},
    a!localVariables(
      local!desiredLengthOfEachSplitArray: 4,
      local!numberOfFullLengthBlocks: rounddown(
        local!lengthOfSingleArray / local!desiredLengthOfEachSplitArray,
        0
      ),
      local!remainder: mod(
        local!lengthOfSingleArray,
        local!desiredLengthOfEachSplitArray
      ),
      local!numberOfArraysInOutput: sum(
        local!numberOfFullLengthBlocks,
        local!remainder <> 0
      ),
      a!forEach(
        items: 1 + enumerate(local!numberOfArraysInOutput),
        expression: sum(
          product(
            fv!index - 1,
            local!desiredLengthOfEachSplitArray
          ),
          1
        ) + enumerate(
          if(
            and(fv!isLast, local!remainder <> 0),
            local!remainder,
            local!desiredLengthOfEachSplitArray
          )
        ),
        
      )
    )
  )
)
